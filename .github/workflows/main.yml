name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirement.txt ]; then pip install -r requirement.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest test.py
    - name: Install Docker
      run: |
        
    - name: Docker login
      env: 
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
   
    - name: Docker build
      run: docker build . --file Dockerfile --tag rajputmarch2020/flask-webapp:$GITHUB_SHA
      
    - name: Docker Push
      run: docker push "rajputmarch2020/flask-webapp:$GITHUB_SHA"
      
    - name: Deploy to Heroku
      uses: gonuit/heroku-docker-deploy@v1.3.3
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
        email: ${{secrets.HEROKU_EMAIL}}
        dockerfile_directory: ./
        dockerfile_name: Dockerfile
        docker_options: "--no-cache"
        process_type: gunicorn app:app --log-file -
        
      
